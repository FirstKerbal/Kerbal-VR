@PROP:HAS[@MODEL:HAS[#model[ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_Model]]]
{
    MODULE
    {
        name = InternalCollider
        shapeType = Box
        parentTransformName = Switch_Rotary_Model
        colliderTransformName = swRotaryLoc
        boxDimensions = 0.015, 0.03, 0.03
    }

    MODULE
    {
        name = VRKnob
        knobTransformName = swRotaryLoc
        stepCount = 2
    }

    // remove any collider models
    !MODEL:HAS[#model[*Collider*]] {}
}

@PROP:HAS[@MODEL:HAS[#model[ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_3_Marks]]]
{
    @MODULE[VRKnob]
    {
        @stepCount = 3
    }
}

@PROP:HAS[@MODEL:HAS[#model[ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_4_Marks]]]
{
    @MODULE[VRKnob]
    {
        @stepCount = 4
    }
}

@PROP:HAS[@MODEL:HAS[#model[ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_5_Marks]]]
{
    @MODULE[VRKnob]
    {
        @stepCount = 5
    }
}

@PROP:HAS[@MODEL:HAS[#model[ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_6_Marks]]]
{
    @MODULE[VRKnob]
    {
        @stepCount = 6
    }
}

// custom rotation handlers ----------------------------------------------------
// these are necessary for rotary switches that respond to single clicks
// rather than increment/decrement clicks

@PROP:HAS[@MODULE[JSIActionGroupSwitch]:HAS[@PLUGINACTION[JSIInternalRPMButtons]:HAS[#actionMethod[ButtonSpeedMode]]]]
{
    @MODULE[VRKnob]
    {
        %customRotationHandler = SpeedDisplayMode
    }
}